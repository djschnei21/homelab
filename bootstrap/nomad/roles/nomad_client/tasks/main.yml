---
- name: Set architecture fact
  set_fact:
    arch_cni: "{{ 'arm64' if ansible_architecture == 'aarch64' else 'amd64' }}"

- name: Set CNI version
  set_fact:
    cni_version: "v1.6.2"

- name: Create CNI plugins directory
  file:
    path: /opt/cni/bin
    state: directory
    mode: '0755'
    owner: root
    group: root

- name: Download and extract CNI plugins
  unarchive:
    src: "https://github.com/containernetworking/plugins/releases/download/{{ cni_version }}/cni-plugins-linux-{{ arch_cni }}-{{ cni_version }}.tgz"
    dest: /opt/cni/bin
    remote_src: yes
    mode: '0755'
    owner: root
    group: root

- name: Install required packages for Docker
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present

- name: Add Docker GPG key
  ansible.builtin.shell: >
    curl -fsSL https://download.docker.com/linux/debian/gpg |
    gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
  args:
    creates: /usr/share/keyrings/docker-archive-keyring.gpg

- name: Add Docker repository
  ansible.builtin.apt_repository:
    repo: "deb [arch={{ 'arm64' if ansible_architecture == 'aarch64' else ansible_architecture }} signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian {{ ansible_lsb.codename }} stable"
    state: present
    filename: docker

- name: Install Docker
  apt:
    name: docker-ce
    state: present
    update_cache: yes

- name: Add user to docker group
  user:
    name: "{{ ansible_user }}"
    groups: docker
    append: yes

- name: Remove default nomad.hcl if present
  file:
    path: /etc/nomad.d/nomad.hcl
    state: absent

- name: Remove server config if switching persona
  file:
    path: /etc/nomad.d/server.hcl
    state: absent

- name: Create Nomad client configuration
  template:
    src: client.hcl.j2
    dest: /etc/nomad.d/client.hcl
    owner: nomad
    group: nomad
  notify:
    - Restart Nomad